#!/usr/bin/env node
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _helpers = require("../helpers");

var _graphql = require("./graphql");

var _systeminformation = _interopRequireDefault(require("systeminformation"));

var _path = _interopRequireDefault(require("path"));

var client = (0, _helpers.setClient)();

var trackedPackageJsonPath = _path["default"].join(process.cwd(), 'package.json');

var _path$dirname$split = _path["default"].dirname(process.argv[1]).split('node_modules'),
    _path$dirname$split2 = (0, _slicedToArray2["default"])(_path$dirname$split, 1),
    targetPath = _path$dirname$split2[0];

var targetPackageJsonPath = _path["default"].join(targetPath, 'package.json');

var getInfos = function getInfos() {
  return new Promise(function (resolve) {
    var data = {};
    return _systeminformation["default"].osInfo().then(function (os) {
      data.os = os;
      return _systeminformation["default"].versions();
    }).then(function (versions) {
      data.versions = versions;
      return _systeminformation["default"].time();
    }).then(function (time) {
      data.time = time;
      return _systeminformation["default"].shell();
    }).then(function () {
      return resolve(data);
    })["catch"](_helpers.displayError);
  });
};

var getPackage = function getPackage(name) {
  return new Promise(function (resolve, reject) {
    client.query({
      query: _graphql.packageQuery,
      variables: {
        name: name
      }
    }).then(function (result) {
      return resolve(result.data.Package);
    })["catch"](function (error) {
      return reject(error);
    });
  });
};

var createPackage = function createPackage(name) {
  return new Promise(function (resolve, reject) {
    client.mutate({
      mutation: _graphql.packageMutation,
      variables: {
        name: name
      }
    }).then(function (result) {
      return resolve(result.data.createPackage);
    })["catch"](function (error) {
      return reject(error);
    });
  });
};

var log =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(trackedPackageJson, targetPackageJson) {
    var _ref2, os, shell, versions, time, name, version, targetName, targetVersion, _ref3, packageId;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return getInfos();

          case 2:
            _ref2 = _context.sent;
            os = _ref2.os;
            shell = _ref2.shell;
            versions = _ref2.versions;
            time = _ref2.time;
            name = trackedPackageJson.name, version = trackedPackageJson.version;
            targetName = targetPackageJson.name, targetVersion = targetPackageJson.version;

            if (!(!name || name === targetName)) {
              _context.next = 11;
              break;
            }

            return _context.abrupt("return");

          case 11:
            _context.next = 13;
            return getPackage(name);

          case 13:
            _context.t0 = _context.sent;

            if (_context.t0) {
              _context.next = 18;
              break;
            }

            _context.next = 17;
            return createPackage(name);

          case 17:
            _context.t0 = _context.sent;

          case 18:
            _ref3 = _context.t0;
            packageId = _ref3.id;
            client.mutate({
              mutation: _graphql.logMutation,
              variables: {
                packageId: packageId,
                name: name,
                version: version,
                targetName: targetName,
                targetVersion: targetVersion,
                os: os,
                shell: shell,
                versions: versions,
                time: time
              }
            });

          case 21:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function log(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

(0, _asyncToGenerator2["default"])(
/*#__PURE__*/
_regenerator["default"].mark(function _callee2() {
  var trackedPackageJson, targetPackageJson;
  return _regenerator["default"].wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.prev = 0;
          _context2.next = 3;
          return (0, _helpers.getPackageJson)(trackedPackageJsonPath);

        case 3:
          trackedPackageJson = _context2.sent;
          _context2.next = 6;
          return (0, _helpers.getPackageJson)(targetPackageJsonPath);

        case 6:
          targetPackageJson = _context2.sent;
          log(trackedPackageJson, targetPackageJson);
          _context2.next = 13;
          break;

        case 10:
          _context2.prev = 10;
          _context2.t0 = _context2["catch"](0);
          (0, _helpers.displayError)();

        case 13:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2, null, [[0, 10]]);
}))();